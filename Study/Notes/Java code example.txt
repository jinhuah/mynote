Java code example
http://www.tutorialspoint.com/java/java_arrays.htm

1) for loop
-------------------
public class Test {

   public static void main(String args[]) {

      for(int x = 10; x < 20; x = x+1) {
         System.out.print("value of x : " + x );
         System.out.print("\n");
      }
   }
}

This would produce the following result:

value of x : 10
value of x : 11
value of x : 12
value of x : 13
value of x : 14
value of x : 15
value of x : 16
value of x : 17
value of x : 18
value of x : 19
------------------------------
public class Test {

   public static void main(String args[]){
      int [] numbers = {10, 20, 30, 40, 50};

      for(int x : numbers ){
         System.out.print( x );
         System.out.print(",");
      }
      System.out.print("\n");
      String [] names ={"James", "Larry", "Tom", "Lacy"};
      for( String name : names ) {
         System.out.print( name );
         System.out.print(",");
      }
   }
}

This would produce the following result:

10,20,30,40,50,
James,Larry,Tom,Lacy,

----------------------------------
2) Define array

    private static String[] browsers = new String[]{
      "firefoxLINUX",
      "chromeLINUX",
//      "firefoxWIN",
//      "chromeWIN",
//      "ieWIN"
    };

--------------
	      // Print all the array elements
      for (int i = 0; i < myList.length; i++) {
         System.out.println(myList[i] + " ");
      }

------------------------
3) 2 dimension array

double[][] a; 
a = new double[M][N]; 
for (int i = 0; i < M; i++) 
   for (int j = 0; j < N; j++) 
      a[i][j] = 0; 
	  
int[][] a = { 
   { 99, 85, 98 }, 
   { 98, 57, 78 }, 
   { 92, 77, 76 }, 
   { 94, 32, 11 }, 
   { 99, 34, 22 }, 
   { 90, 46, 54 }, 
   { 76, 59, 88 }, 
   { 92, 66, 89 }, 
   { 97, 71, 24 }, 
   { 89, 29, 38 }
};

http://introcs.cs.princeton.edu/java/14array/

4) Selenium list WebElement

for (int i = 0; i<=elements.size(); i++){
     WebElement ele = elements.get(i);
     ....
}

5) Table

// Get the output table
WebElement outputTable = driver.findElement(By.cssSelector("div.workspace_results.ui-droppable div table"));

//Get all rows
List<WebElement> rows = outputTable.findElements(By.tagName("tr"));

for (WebElement row : rows) {
	List<WebElement> cols1 = row.findElements(By.tagName("th"));
	
	for (int i = 0; i < cols1.size(); i++) {
		WebElement col = cols1.get(i);
		System.out.print(col.getText() + "\t");
	}
	
	for (WebElement col : cols1) {
		System.out.print(col.getText() + "\t");
	}

}

6) 2 dimension example

public class TwoDimensionalArray 
{
   public static void main(String[] args) 
   {
      int arr[][]=new int[3][3]; //Here i am declaring an array of size 3 rows and 3 columns
      
      arr[0][0]=0; //These 3 lines in first of data with 3 columns
      arr[0][1]=1;
      arr[0][2]=2;
      
      
      arr[1][0]=0;
      arr[1][1]=1;
      arr[1][2]=2;
            
      arr[2][0]=0;
      arr[2][1]=1;
      arr[2][2]=2;
      
      
      for(int i=0;i<3;i++)  //Here i am looping through each value
      {
         for(int j=0;j<3;j++)
         {
            System.out.print(arr[j]+" ");  
         }
         System.out.println();
      }
   }

}


Output is:
0 1 2 
0 1 2 
0 1 2

7) Method parameter 2 dimension array
http://stackoverflow.com/questions/13814954/passing-a-2d-array-from-one-method-to-another

static int countNeighbors ( final boolean[][] grid, final int row, final int col )

for(int row = 1; row < 18; row++) {
    for(int col = 1; col < 18; col++) {
        n = countNeighbors(TempGrid,row,col);
        ...

    }
}

8) Write texts into a file

---------

2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
package javafile;
 
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
 
/**
 *
 * @web http://java-buddy.blogspot.com/
 */
public class WriteStringToFile {
 
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        FileWriter fileWriter = null;
        try {
            String content = "Hello! Java-Buddy :)";
            File newTextFile = new File("C:/test/test.txt");
            fileWriter = new FileWriter(newTextFile);
            fileWriter.write(content);
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(WriteStringToFile.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fileWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(WriteStringToFile.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
	}
--------------

Write strings into file in a new line
--------------
public void writeToPerfReportFile(String content) {

		FileWriter fileWriter = null;

		try {
			fileWriter = new FileWriter(perfReportFile, true);
			fileWriter.write(content);
			// fileWriter.write("\n"); -- This is to change to a new line.
			fileWriter.write("\n");
			fileWriter.close();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if ( fileWriter != null) {
					fileWriter.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}

		}
	}



9) Get clase name
String className = this.getClass().getSimpleName();
or 
String className = Thread.currentThread().getStackTrace()[2].getClassName();

10) Get current method name
	public static String getCurrentMethodName() {
		return Thread.currentThread().getStackTrace()[2].getClassName() + "."
				+ Thread.currentThread().getStackTrace()[2].getMethodName();
	}
	
You will get:
className.methodName
query.testnewquery.AP01_Programme_by_Advert_Promo

10) Optional parameters
The below of "Integer... rowNumber" is optional.

	public void verifyTableColumnSize(int num, Integer... rowNumber) {

		// Get the output table
		WebElement outputTable = driver.findElement(By.cssSelector("div.workspace_results.ui-droppable div table"));

		//Get all rows
		List<WebElement> rows = outputTable.findElements(By.tagName("tr"));

		// Use longest columns to calculate column numbers.
		if ( rowNumber.length > 0 )
		{
			int rN = rowNumber[0] - 1 ;
			List<WebElement> col0 = rows.get(rN).findElements(By.tagName("th"));
			// Ensure the column number is same as given
			System.out.println(col0.size());
			Assert.assertEquals(num, col0.size());
		}
		else
		{
			List<WebElement> col0 = rows.get(0).findElements(By.tagName("th"));
			// Ensure the column number is same as given
			System.out.println(col0.size());
			Assert.assertEquals(num, col0.size());
		}

	}
	
11) split
		String dateStart = "2014-09-01";
		String[] date1 = dateStart.split("-");
12) convert string to integer
		int yearE = Integer.parseInt(date1[0]);
		int monthE = Integer.parseInt(date1[1]);
		int dayE = Integer.parseInt(date1[2]);
		
13) try

 
 if(monthNumber>=0 && monthNumber<12)
 try
 {
 Calendar calendar = Calendar.getInstance();
 calendar.set(Calendar.MONTH, monthNumber);
 
 SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MMM");
 simpleDateFormat.setCalendar(calendar);
 monthName = simpleDateFormat.format(calendar.getTime());
 }
 catch (Exception e)
 {
 if(e!=null)
 e.printStackTrace();
 }
 return monthName;
 }
 
 14) Read data from csv file
 	/**  --- the code below is not working!!! - 19/11/2014
	public String[][] readDataFromCSVFile1(String methodName) {

		String csvFile = System.getProperty("user.dir") + "\\data\\" + this.getClass().getSimpleName() + "\\" + methodName + ".csv";

		// Read all
		try {
			CSVReader csvReader = new CSVReader(new FileReader(csvFile));
			List<String[]> list = csvReader.readAll();

			// Convert to 2D array
			String[][] tableFromCSV = new String[list.size()][];
			tableFromCSV = list.toArray(tableFromCSV);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		return tableFromCSV;
	}
	 */
	 
	 
	 ---- working code below --------
	 public String[][] readDataFromCSVFile(String methodName) {

		String csvFile = System.getProperty("user.dir") + "\\data\\" + this.getClass().getSimpleName() + "\\" + methodName + ".csv";
		BufferedReader br = null;
		String line = "";
		String cvsSplitBy = ",";

		// Define 2D array to 30 rows and 30 columns
		// TODO: can an array be dynamic size?
		String [][] tableFromCSV = new String[100][100];

		try {

			br = new BufferedReader(new FileReader(csvFile));
			int a =0;
			while ((line = br.readLine()) != null) {

				// use comma as separator
				String[] dataRow = line.split(cvsSplitBy);
				for (int i =0; i < dataRow.length; i ++ ){
					tableFromCSV[a][i] = dataRow[i];
				}
				a = a + 1;
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (br != null) {
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		return tableFromCSV;
	}

15) exceptions
In java, there are only five types of exceptions (in java.lang) that must be listed in a throws clause (remember that all
Errors and RuntimeExceptions are exempt):

n ClassNotFoundException
n IllegalAccessException
n InstantiationException
n InterrupedException
n NoSuchMethodException

16) date time calendar format

public static String getCurrentTimeStamp() {
    SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//dd/MM/yyyy
    Date now = new Date();
    String strDate = sdfDate.format(now);
    return strDate;
}

17) long to string

        long startTime = System.currentTimeMillis();
        
        System.out.println(startTime);
        
        String name = Long.toString(startTime);
        System.out.println("String-"+name);
		
		
		-------
		// Prepare name for login
        // time in milisecond format, e.g 1436187832651
        /*
        long currentTime = System.currentTimeMillis();        
  
        String firstName = "TestF" + Long.toString(currentTime);
        String lastName = "TestL" + Long.toString(currentTime);
        String email = "Test" + Long.toString(currentTime) + "@gmail.com";
        String mobileNo = "07712345678";
        */
		
18) date, time 
        Calendar cal = Calendar.getInstance();
        Date currentTime = cal.getTime();
        System.out.println("Calendar time:" + currentTime);

19) Randam characters

RandomStringUtils.randomAlphabetic(stringLength);

---
    	System.out.println("1: " + RandomStringUtils.randomAlphabetic(4));
    	System.out.println("2: " + RandomStringUtils.randomAlphabetic(4));
    	System.out.println("3: " + RandomStringUtils.randomAlphabetic(4));
---
1: vOGn
2: ElFm
3: TUnw

4) String equal

 option.getText().equals("Whitbread") ) 
 

5) Browser -- blank page.
On chrome:
chrome://nettab/
